{"version":3,"file":"SQLExplorer-DB26fdlY.js","sources":["../../../src/components/ComplexComponents/AdminDashboard/SQLExplorer/SQLExplorer.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport Button from '../../../Button/Button';\r\nimport '../../../../styles/components/ComplexComponents/Admin/SQLExplorer.scss';\r\n\r\nexport default function SQLExplorer() {\r\n    const [sql, setSql] = useState('');\r\n    const [result, setResult] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const runQuery = async () => {\r\n        if (!sql.trim()) {\r\n            setError('Введите SQL-запрос');\r\n            setResult(null);\r\n            return;\r\n        }\r\n\r\n        const token = localStorage.getItem('authToken');\r\n        if (!token) {\r\n            setError('Пользователь не авторизован');\r\n            setResult(null);\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError('');\r\n        setResult(null);\r\n\r\n        try {\r\n            const res = await fetch('/api/sql-explorer/execute', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({ sql }),\r\n            });\r\n\r\n            const data = await res.json();\r\n\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setResult(data.rows || `Изменено строк: ${data.affectedRows ?? 0}`);\r\n            }\r\n        } catch (err) {\r\n            setError('Ошибка выполнения запроса: ' + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"aam_sql-explorer\">\r\n            <h2 className=\"aam_sql-title\">SQL Explorer</h2>\r\n\r\n            <textarea\r\n                className=\"aam_sql-textarea\"\r\n                value={sql}\r\n                onChange={e => setSql(e.target.value)}\r\n                placeholder=\"Введите SQL-запрос\"\r\n            />\r\n\r\n            <div className=\"aam_sql-actions\">\r\n                <Button type='submit' variant='white' label={loading ? 'Выполнение...' : 'Выполнить'} onClick={runQuery} disabled={loading} />\r\n            </div>\r\n\r\n            {error && <p className=\"aam_sql-error\">{error}</p>}\r\n\r\n            {result && (\r\n                <div className=\"aam_sql-result\">\r\n                    {Array.isArray(result) ? (\r\n                        <table className=\"aam_sql-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {Object.keys(result[0] || {}).map((col, idx) => (\r\n                                        <th key={idx}>{col}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {result.map((row, rowIndex) => (\r\n                                    <tr key={rowIndex}>\r\n                                        {Object.values(row).map((val, colIndex) => (\r\n                                            <td key={colIndex}>{val === null ? 'NULL' : String(val)}</td>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    ) : (\r\n                        <p>{result}</p>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}"],"names":["SQLExplorer","sql","setSql","useState","result","setResult","loading","setLoading","error","setError","runQuery","token","data","err","jsxs","jsx","e","Button","col","idx","row","rowIndex","val","colIndex"],"mappings":"sDAIA,SAAwBA,GAAc,CAClC,KAAM,CAACC,EAAKC,CAAM,EAAIC,EAAAA,SAAS,EAAE,EAC3B,CAACC,EAAQC,CAAS,EAAIF,EAAAA,SAAS,IAAI,EACnC,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAK,EACtC,CAACK,EAAOC,CAAQ,EAAIN,EAAAA,SAAS,EAAE,EAE/BO,EAAW,SAAY,CACzB,GAAI,CAACT,EAAI,OAAQ,CACbQ,EAAS,oBAAoB,EAC7BJ,EAAU,IAAI,EACd,MACJ,CAEA,MAAMM,EAAQ,aAAa,QAAQ,WAAW,EAC9C,GAAI,CAACA,EAAO,CACRF,EAAS,6BAA6B,EACtCJ,EAAU,IAAI,EACd,MACJ,CAEAE,EAAW,EAAI,EACfE,EAAS,EAAE,EACXJ,EAAU,IAAI,EAEd,GAAI,CAUA,MAAMO,EAAO,MATD,MAAM,MAAM,4BAA6B,CACjD,OAAQ,OACR,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAUD,CAAK,EAAA,EAEpC,KAAM,KAAK,UAAU,CAAE,IAAAV,EAAK,CAAA,CAC/B,GAEsB,KAAA,EAEnBW,EAAK,MACLH,EAASG,EAAK,KAAK,EAEnBP,EAAUO,EAAK,MAAQ,mBAAmBA,EAAK,cAAgB,CAAC,EAAE,CAE1E,OAASC,EAAK,CACVJ,EAAS,8BAAgCI,EAAI,OAAO,CACxD,QAAA,CACIN,EAAW,EAAK,CACpB,CACJ,EAEA,OACIO,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACX,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,gBAAgB,SAAA,eAAY,EAE1CA,EAAAA,IAAC,WAAA,CACG,UAAU,mBACV,MAAOd,EACP,SAAUe,GAAKd,EAAOc,EAAE,OAAO,KAAK,EACpC,YAAY,oBAAA,CAAA,QAGf,MAAA,CAAI,UAAU,kBACX,SAAAD,EAAAA,IAACE,EAAA,CAAO,KAAK,SAAS,QAAQ,QAAQ,MAAOX,EAAU,gBAAkB,YAAa,QAASI,EAAU,SAAUJ,EAAS,EAChI,EAECE,GAASO,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAiB,SAAAP,EAAM,EAE7CJ,GACGW,EAAAA,IAAC,MAAA,CAAI,UAAU,iBACV,SAAA,MAAM,QAAQX,CAAM,EACjBU,EAAAA,KAAC,QAAA,CAAM,UAAU,gBACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACG,eAAC,KAAA,CACI,SAAA,OAAO,KAAKX,EAAO,CAAC,GAAK,CAAA,CAAE,EAAE,IAAI,CAACc,EAAKC,IACpCJ,EAAAA,IAAC,MAAc,SAAAG,CAAA,EAANC,CAAU,CACtB,CAAA,CACL,CAAA,CACJ,EACAJ,EAAAA,IAAC,QAAA,CACI,SAAAX,EAAO,IAAI,CAACgB,EAAKC,IACdN,EAAAA,IAAC,KAAA,CACI,SAAA,OAAO,OAAOK,CAAG,EAAE,IAAI,CAACE,EAAKC,IAC1BR,EAAAA,IAAC,KAAA,CAAmB,SAAAO,IAAQ,KAAO,OAAS,OAAOA,CAAG,CAAA,EAA7CC,CAA+C,CAC3D,CAAA,EAHIF,CAIT,CACH,CAAA,CACL,CAAA,CAAA,CACJ,EAEAN,EAAAA,IAAC,IAAA,CAAG,SAAAX,CAAA,CAAO,CAAA,CAEnB,CAAA,EAER,CAER"}